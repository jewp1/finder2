"""update models structure

Revision ID: 750d62555845
Revises: c118d8c764ca
Create Date: 2025-04-28 17:30:48.598292

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '750d62555845'
down_revision = 'c118d8c764ca'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('likes', sa.Column('project_id', sa.Integer(), nullable=False))
    op.add_column('likes', sa.Column('is_mutual', sa.Boolean(), nullable=True))
    op.alter_column('likes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('likes', 'liked_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('likes_liked_user_id_fkey', 'likes', type_='foreignkey')
    op.drop_constraint('likes_user_id_fkey', 'likes', type_='foreignkey')
    op.create_foreign_key(None, 'likes', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'likes', 'users', ['liked_user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'likes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('matches', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('matches', sa.Column('project_id', sa.Integer(), nullable=False))
    op.add_column('matches', sa.Column('status', sa.String(), nullable=True))
    op.add_column('matches', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.drop_constraint('matches_user2_id_fkey', 'matches', type_='foreignkey')
    op.drop_constraint('matches_user1_id_fkey', 'matches', type_='foreignkey')
    op.create_foreign_key(None, 'matches', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'matches', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_column('matches', 'user1_id')
    op.drop_column('matches', 'user2_id')
    op.add_column('projects', sa.Column('requirements', sa.Text(), nullable=True))
    op.add_column('projects', sa.Column('budget', sa.String(), nullable=True))
    op.add_column('projects', sa.Column('duration', sa.String(), nullable=True))
    op.add_column('projects', sa.Column('status', sa.String(), nullable=True))
    op.alter_column('projects', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('projects', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('projects', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index('ix_projects_title', table_name='projects')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_projects_title', 'projects', ['title'], unique=False)
    op.alter_column('projects', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('projects', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('projects', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('projects', 'status')
    op.drop_column('projects', 'duration')
    op.drop_column('projects', 'budget')
    op.drop_column('projects', 'requirements')
    op.add_column('matches', sa.Column('user2_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('matches', sa.Column('user1_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.create_foreign_key('matches_user1_id_fkey', 'matches', 'users', ['user1_id'], ['id'])
    op.create_foreign_key('matches_user2_id_fkey', 'matches', 'users', ['user2_id'], ['id'])
    op.drop_column('matches', 'updated_at')
    op.drop_column('matches', 'status')
    op.drop_column('matches', 'project_id')
    op.drop_column('matches', 'user_id')
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.create_foreign_key('likes_user_id_fkey', 'likes', 'users', ['user_id'], ['id'])
    op.create_foreign_key('likes_liked_user_id_fkey', 'likes', 'users', ['liked_user_id'], ['id'])
    op.alter_column('likes', 'liked_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('likes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('likes', 'is_mutual')
    op.drop_column('likes', 'project_id')
    # ### end Alembic commands ### 